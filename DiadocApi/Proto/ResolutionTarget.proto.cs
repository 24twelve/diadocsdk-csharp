//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: ResolutionTarget.proto
namespace Diadoc.Api.Proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ResolutionTarget")]
  public partial class ResolutionTarget : global::ProtoBuf.IExtensible
  {
    public ResolutionTarget() {}
    

    private string _Department = "";
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"Department", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string Department
    {
      get { return _Department; }
      set { _Department = value; }
    }

    private string _DepartmentId = "";
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"DepartmentId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string DepartmentId
    {
      get { return _DepartmentId; }
      set { _DepartmentId = value; }
    }

    private string _User = "";
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"User", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string User
    {
      get { return _User; }
      set { _User = value; }
    }

    private string _UserId = "";
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"UserId", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string UserId
    {
      get { return _UserId; }
      set { _UserId = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}